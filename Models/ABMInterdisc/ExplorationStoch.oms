
// Parameters
val nwMode = Val[String]
val nwCorrelation = Val[Double]
val sigmaDiscipline = Val[Double]
val alphaPreference = Val[Double]
val entryCostHierarchy = Val[Double]
val betaDC = Val[Double]
val finalTime = Val[Int]

val id = Val[Int]
val replication = Val[Int]

// Indicators
val interdisciplinarity = Val[Double]
val depth = Val[Double]
val nwEffectiveCorr = Val[Double]
val maxDegree = Val[Double]


// setup-experiment [nw-mode nw-correlation sigma alpha-pref beta tf seed]
val cmds = List("setup-experiment \"${nwMode}\" ${nwCorrelation} ${sigmaDiscipline} ${alphaPreference} ${entryCostHierarchy} ${betaDC} ${finalTime} ${replication}","run-experiment")

val model = NetLogo6Task(workDirectory / "HEADLESS_Perspectivism.nlogo",cmds,embedWorkspace = true,reuseWorkspace = true) set (
  inputs += (nwMode,nwCorrelation,sigmaDiscipline,alphaPreference,entryCostHierarchy,betaDC,finalTime,replication,id),
  outputs += (nwMode,nwCorrelation,sigmaDiscipline,alphaPreference,entryCostHierarchy,betaDC,finalTime,replication,id),
  netLogoOutputs += ("indicators:smoothed-interdisciplinarity", interdisciplinarity),
  netLogoOutputs += ("indicators:smoothed-depth", depth),
  netLogoOutputs += ("indicators:social-degree-correlation", nwEffectiveCorr),
  netLogoOutputs += ("indicators:max-degree", maxDegree),
  finalTime := 2000
)

//val purpose = "STOCHASTICITY_GRID"
val purpose = "STOCHASTICITY_CLUSTER"
//val purpose = "TEST"

val indics_hook = CSVHook(workDirectory / "exploration" / ((new java.text.SimpleDateFormat("yyyyMMdd_HHmmss")).format(new java.util.Date()))+"_"+purpose+".csv")

//val env = LocalEnvironment(5)
//val env = EGIEnvironment("vo.complex-systems.eu")
val env = SGEEnvironment(memory = 2 gigabytes, localSubmission = true, wallTime = 30 minutes, workDirectory = "/home/uceejra/Scratch/.tmp")


// exploration
val exploration = DirectSampling(
  //evaluation = (model on env hook indics_hook),
  evaluation = (model on env by 20 hook indics_hook),
  sampling = ((LHS(80,
    nwCorrelation in Range(0.0,1.0),
    sigmaDiscipline in Range(0.01,0.3),
    alphaPreference in Range(0.0,5.0),
    entryCostHierarchy in Range(0.0,5.0),
    betaDC in Range(0.0,5.0)
  ) x (nwMode in Seq("small-world","random"))) withIndex id)
  /*(((nwMode in Seq("random","small-world")) x
    (nwCorrelation in (0.0 to 1.0 by 0.2)) x
    (sigmaDiscipline in (0.05 to 0.3 by 0.05)) x
    (alphaPreference in (0.5 to 2.0 by 0.5)) x
    (betaDC in (0.0 to 5.0 by 0.5))
  ) withIndex id)*/
  x (replication in (UniformDistribution[Int]() take 500))//50))
)

exploration
