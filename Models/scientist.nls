
;;
; 





to start-new-projects
  
end


to-report initial-discipline-distribution
  
  let res []
  
  let disc-mean random-float 1
  
  let x 0
  repeat discipline-bins [
    set res lput (exp ( - ((x / discipline-bins)- disc-mean) / sigma-discipline)) res
    set x x + 1 
  ]
  
  ; dirty normalisation
  let s sum res set x 0 repeat discipline-bins [set res replace-item x res ((item x res) / s) set x x + 1]
  
  
  report res
  
end



to-report disc-overlap [s1 s2]
  let res 0
  let i 0 foreach [discipline-distribution] of s1 [
    set res res + ? * item i [discipline-distribution] of s2
    set i i + 1 
  ]
  report res
end